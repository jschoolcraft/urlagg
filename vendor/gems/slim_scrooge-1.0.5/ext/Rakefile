task :default=>[:build]

task :build do
  # only try to install extension on non windows / MRI 1.8
  unless /mswin/ =~ RUBY_PLATFORM || RUBY_VERSION >= "1.9" || defined?(RUBY_ENGINE) && RUBY_ENGINE != "ruby"
    require 'rbconfig'

    ruby = File.join(Config::CONFIG["bindir"],
    Config::CONFIG["RUBY_INSTALL_NAME"])
    ruby << Config::CONFIG["EXEEXT"]

    # escape string in case path to ruby executable contain spaces.
    ruby.sub!(/.*\s.*/m, '"\&"')

    results = `#{ruby} extconf.rb`

    unless File.exist? 'Makefile'
      raise "Makefile not found:\n\n#{results.join "\n"}" 
    end

    dest_path = ENV["RUBYARCHDIR"]

    mf = File.read('Makefile')
    mf = mf.gsub(/^RUBYARCHDIR\s*=\s*\$[^$]*/, "RUBYARCHDIR = #{dest_path}")
    mf = mf.gsub(/^RUBYLIBDIR\s*=\s*\$[^$]*/, "RUBYLIBDIR = #{dest_path}")

    File.open('Makefile', 'wb') {|f| f.print mf}

    make_program = ENV['make']
    unless make_program
      make_program = (/mswin/ =~ RUBY_PLATFORM) ? 'nmake' : 'make'
    end

    ['', ' install'].each do |target|
      cmd = "#{make_program}#{target}"
      results << cmd + "\n"
      results << `#{cmd}`

      raise "make#{target} failed:\n\n#{results}" unless $?.success?
    end
  end
end
